<div>
  <label for="date_selector" class="static">Date Filter</label>
  <select id="date_selector">
    <option>All</option>
    <option selected="selected">Last week</option>
    <option>This month</option>
    <option>Last month</option>
    <option>This year</option>
    <option>Last year</option>
    <option>Everything</option>
  </select>
</div>

<div>
  <label for="speaker" class="static">Speaker</label>
  <select id="speaker">
    <option selected="selected">Everyone</option>
    <option>Pastor Ken Carr</option>
    <option>Pastor Jeff Holwerda</option>
    <option>Tighe Farrow</option>
    <option>Pulgh Pakoota</option>
  </select>
</div>

<div>
  <label for="search" class="static">Search</label>
  <input type="text" name="search"/>
</div>

<div class="checkboxes">
<ul>
  <li>
    <input type="checkbox" name="Sermons" checked="checked"/>
    <label for="Sermons">Sermons</label>
  </li>
  <li>
    <input type="checkbox" name="ACE" checked="checked"/>
    <label for="ACE">ACE (Sunday School)</label>
  </li>
</ul>
<ul>
  <li>
    <input type="checkbox" name="Published" checked="checked"/>
    <label for="Published">Published</label>
  </li>
  <li>
    <input type="checkbox" name="Unpublished" checked="checked"/>
    <label for="Unpublished">Unpublished</label>
  </li>
  <li>
    <input type="checkbox" name="Archived" checked="checked"/>
    <label for="Archived">Archived</label>
  </li>
</ul>
</div>

<div class="checkboxes">
<ul id="specials">
  <li>
    <input type="checkbox" name="Specials" checked="checked"/>
    <label for="Specials">Specials</label>
    <ul>
      <li>
        <input type="checkbox" name="Portrait" checked="checked"/>
        <label for="Portrait">Portrait of Grace</label>
      </li>
      <li>
        <input type="checkbox" name="Dedication" checked="checked"/>
        <label for="Dedication">Child Dedication</label>
      </li>
      <li>
        <input type="checkbox" name="Baptism" checked="checked"/>
        <label for="Baptism">Baptism</label>
      </li>
      <li>
        <input type="checkbox" name="Christmas" checked="checked"/>
        <label for="Christmas">Christmas</label>
      </li>
      <li>
        <input type="checkbox" name="GoodFriday" checked="checked"/>
        <label for="GoodFriday">Good Friday</label>
      </li>
    </ul>
  </li>
</ul>
</div>

<div id="drop_target"> </div>
<p id="drop_status"> </p>
<p id="drop_list"> </p>

<div id="progress"> </div>

<div id="uploaded_files" style="display: none;">
  <span class="icon mp3"></span>
  <span class="icon mp3"></span>
  <span class="icon mp3"></span>
  <span class="icon flac"></span>
  <span class="icon label"></span>
</div>

<!-- From the dropbox example! -->
<div class="filelist"> </div>

<script src="/js/jquery.dnduploader.js" type="text/javascript"></script>
<script type="text/javascript">
$("div#dropbox").dndUploader({
  url : "/",
  method : "PUT",
  progress: $("div#progress"),
  callback: function() {
  console.log(' callback function initzed after completed update to get updated file list');
  setTimeout(function() {
    Foodle_Group.getFiles(showFiles);
    }, 400)
  }
});

/*
 * Show a list of files in the <div class="filelist"> container.
 */
function showFiles(files) {
      var i;

      $("div.filelist").empty();
      for(i = 0; i < files.length; i++) {
              $("div.filelist").append(files[i].view() );
      }
}

var Foodle_Group = function() {

        var
                // Dependencies
                api = Foodle_API,

                // Local variables
                groupid;

        function setGroupid(sgroupid) {
                groupid = sgroupid;
        }


        function getFiles(callback) {
                console.log('Get file list');
                api.getData('/api/files/' + groupid, null, FOODLE.data.File, callback);
        }

        function getActivity(callback) {
                api.getData('/api/activity/group/' + groupid, null, FOODLE.data.Activity, callback);
        }

        function getMembers(callback) {
                api.getData('/api/contacts/' + groupid, null, FOODLE.data.Person, callback);
        }

        return {
                // Initialization methods
                setGroupid: setGroupid,

                // Get data methods
                getFiles: getFiles,
                getMembers: getMembers,
                getActivity: getActivity
        };

}();

/**
 * Generic Foodle API, that may be used to perform all ajax calls towards Foodle
 * Handles the usertoken that is required, error handling and custom callabacks.
 */
var Foodle_API = function() {

        var
                userToken;

        /*
         * The Foodle_API library needs to be initialized with the user token
         * before it can be used
         */
        function init(setUserToken) {
                userToken = setUserToken;
        }

        /*
         * The processResponse function returns a closure with a specific callback() function
         */
        function processResponse(constructor, callback) {
                return function(data) {

                        var
                                i,
                                processed = [];

                        if (data.status == 'ok' && data.data) {

                                //console.log('got data');
                                //console.log(data.data);

                                if (constructor && typeof constructor === 'function') {
                                        for(i = 0; i < data.data.length; i++) {
                                                processed.push(new constructor(data.data[i]));
                                        }
                                        if (callback && typeof callback === 'function') callback(processed);
                                } else {
                                        if (callback && typeof callback === 'function') callback(data.data);
                                }

                        } else {
                                throw new Error('Error response on Foodle API: ' + data.message);
                        }
                }
        }

        // Perform a API call.
        function getData(endpoint, params, constructor, callback) {

                if(!userToken) throw new Error('UserToken was not set before API call was initiated at endpoint [' + endpoint + ']');

                var key;
                var parameters = {userToken: userToken};

                for(key in params) {
                        if (params.hasOwnProperty(key)) {
                                parameters[key] = params[key];
                        }
                }

                $.getJSON(endpoint, parameters, processResponse(constructor, callback) );

        }

        return {
                init: init,
                getData: getData
        };

}();
</script>

<!--
<script src="js/jquery.fileupload-ui.js"> </script>
<script type="text/javascript">
  $('#drop_target').fileupload({
      type: 'PUT',
      dataType: 'json',
      dropZone: '#drop_target'
      url: '/upload/'
  });
</script>
-->
<!--
<script src="/js/html5uploader.js" type="text/javascript"></script>
<script type="text/javascript">
  uploader = new uploader('drop_target', 'drop_status', 'upload', 'drop_list');
</script>
-->

<script type="text/javascript">
$("#progress").progressbar({
    value: 8,
});

$("#drop_target").dndUploader({
  url : "/",
  method : "PUT"
});
</script>
